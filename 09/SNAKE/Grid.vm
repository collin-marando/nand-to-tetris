function Grid.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push argument 1
pop this 2
push argument 0
push argument 1
call Math.multiply 2
pop this 3
push this 3
call Array.new 1
pop this 0
push pointer 0
return
function Grid.add 1
push argument 0
pop pointer 0
push argument 2
push this 1
call Math.multiply 2
push argument 1
add
pop local 0
push local 0
push this 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Grid.draw 3
push argument 0
pop pointer 0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push this 3
lt
not
if-goto WHILE_END0
push local 2
push this 1
call Math.divide 2
pop local 1
push local 2
push local 1
push this 1
call Math.multiply 2
sub
pop local 0
push local 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 16
call Math.multiply 2
push local 1
push constant 16
call Math.multiply 2
push local 0
push constant 16
call Math.multiply 2
push constant 15
add
push local 1
push constant 16
call Math.multiply 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 16
call Math.multiply 2
push local 1
push constant 16
call Math.multiply 2
push local 0
push constant 16
call Math.multiply 2
push constant 15
add
push local 1
push constant 16
call Math.multiply 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
push local 2
push this 0
add
push local 2
push this 0
add
pop pointer 1
push that 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
