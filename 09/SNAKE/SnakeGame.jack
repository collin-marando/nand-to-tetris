class SnakeGame {
	field Snake snake;
	field int direction;

	constructor SnakeGame new() {
		let snake = Snake.new(0, 0, 3);
		return this;
	}

	method void move() {
	  if (direction = 1) { do snake.moveUp(); }
      if (direction = 2) { do snake.moveDown(); }
      if (direction = 3) { do snake.moveLeft(); }
      if (direction = 4) { do snake.moveRight(); }
      do Sys.wait(5);
      return;
	}

	method void run() {
		var char key;
		var boolean exit;
		let exit = false;
		
		while (~exit) {

			while (key = 0){
				let key = Keyboard.keyPressed();
				do move();
			}
			
			if (key = 81)  { let exit = true; }     // q key
			if (key = 131) { let direction = 1; }   // up arrow
			if (key = 133) { let direction = 2; }   // down arrow
			if (key = 130) { let direction = 3; }   // left arrow
			if (key = 132) { let direction = 4; }   // right arrow

			let key = 0;
		}
		return;
	}

	method void dispose() {
		do snake.dispose();
		do Memory.deAlloc(this);
		return;
	}
}